// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.data.domain;

import com.agility.ddp.data.domain.DdpSourceSystem;
import com.agility.ddp.data.domain.DdpSourceSystemDataOnDemand;
import com.agility.ddp.data.domain.DdpSourceSystemRepository;
import com.agility.ddp.data.domain.DdpSourceSystemService;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect DdpSourceSystemDataOnDemand_Roo_DataOnDemand {
    
    declare @type: DdpSourceSystemDataOnDemand: @Component;
    
    private Random DdpSourceSystemDataOnDemand.rnd = new SecureRandom();
    
    private List<DdpSourceSystem> DdpSourceSystemDataOnDemand.data;
    
    @Autowired
    DdpSourceSystemService DdpSourceSystemDataOnDemand.ddpSourceSystemService;
    
    @Autowired
    DdpSourceSystemRepository DdpSourceSystemDataOnDemand.ddpSourceSystemRepository;
    
    public DdpSourceSystem DdpSourceSystemDataOnDemand.getNewTransientDdpSourceSystem(int index) {
        DdpSourceSystem obj = new DdpSourceSystem();
        setSouCompanyCode(obj, index);
        setSouCreatedBy(obj, index);
        setSouCreatedDate(obj, index);
        setSouDomain(obj, index);
        setSouFilePath(obj, index);
        setSouModifiedBy(obj, index);
        setSouModifiedDate(obj, index);
        setSouSaPassword(obj, index);
        setSouServerIp(obj, index);
        setSouServerName(obj, index);
        setSouServiceAccount(obj, index);
        setSouStatus(obj, index);
        return obj;
    }
    
    public void DdpSourceSystemDataOnDemand.setSouCompanyCode(DdpSourceSystem obj, int index) {
        String souCompanyCode = "souCompanyCode_" + index;
        if (souCompanyCode.length() > 16) {
            souCompanyCode = souCompanyCode.substring(0, 16);
        }
        obj.setSouCompanyCode(souCompanyCode);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouCreatedBy(DdpSourceSystem obj, int index) {
        String souCreatedBy = "souCreatedBy_" + index;
        if (souCreatedBy.length() > 120) {
            souCreatedBy = souCreatedBy.substring(0, 120);
        }
        obj.setSouCreatedBy(souCreatedBy);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouCreatedDate(DdpSourceSystem obj, int index) {
        Calendar souCreatedDate = Calendar.getInstance();
        obj.setSouCreatedDate(souCreatedDate);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouDomain(DdpSourceSystem obj, int index) {
        String souDomain = "souDomain_" + index;
        if (souDomain.length() > 32) {
            souDomain = souDomain.substring(0, 32);
        }
        obj.setSouDomain(souDomain);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouFilePath(DdpSourceSystem obj, int index) {
        String souFilePath = "souFilePath_" + index;
        if (souFilePath.length() > 256) {
            souFilePath = souFilePath.substring(0, 256);
        }
        obj.setSouFilePath(souFilePath);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouModifiedBy(DdpSourceSystem obj, int index) {
        String souModifiedBy = "souModifiedBy_" + index;
        if (souModifiedBy.length() > 120) {
            souModifiedBy = souModifiedBy.substring(0, 120);
        }
        obj.setSouModifiedBy(souModifiedBy);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouModifiedDate(DdpSourceSystem obj, int index) {
        Calendar souModifiedDate = Calendar.getInstance();
        obj.setSouModifiedDate(souModifiedDate);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouSaPassword(DdpSourceSystem obj, int index) {
        String souSaPassword = "souSaPassword_" + index;
        if (souSaPassword.length() > 120) {
            souSaPassword = souSaPassword.substring(0, 120);
        }
        obj.setSouSaPassword(souSaPassword);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouServerIp(DdpSourceSystem obj, int index) {
        String souServerIp = "souServerIp_" + index;
        if (souServerIp.length() > 32) {
            souServerIp = souServerIp.substring(0, 32);
        }
        obj.setSouServerIp(souServerIp);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouServerName(DdpSourceSystem obj, int index) {
        String souServerName = "souServerName_" + index;
        if (souServerName.length() > 32) {
            souServerName = souServerName.substring(0, 32);
        }
        obj.setSouServerName(souServerName);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouServiceAccount(DdpSourceSystem obj, int index) {
        String souServiceAccount = "souServiceAccount_" + index;
        if (souServiceAccount.length() > 32) {
            souServiceAccount = souServiceAccount.substring(0, 32);
        }
        obj.setSouServiceAccount(souServiceAccount);
    }
    
    public void DdpSourceSystemDataOnDemand.setSouStatus(DdpSourceSystem obj, int index) {
        Integer souStatus = new Integer(index);
        obj.setSouStatus(souStatus);
    }
    
    public DdpSourceSystem DdpSourceSystemDataOnDemand.getSpecificDdpSourceSystem(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        DdpSourceSystem obj = data.get(index);
        String id = obj.getSouApplicationCode();
        return ddpSourceSystemService.findDdpSourceSystem(id);
    }
    
    public DdpSourceSystem DdpSourceSystemDataOnDemand.getRandomDdpSourceSystem() {
        init();
        DdpSourceSystem obj = data.get(rnd.nextInt(data.size()));
        String id = obj.getSouApplicationCode();
        return ddpSourceSystemService.findDdpSourceSystem(id);
    }
    
    public boolean DdpSourceSystemDataOnDemand.modifyDdpSourceSystem(DdpSourceSystem obj) {
        return false;
    }
    
    public void DdpSourceSystemDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = ddpSourceSystemService.findDdpSourceSystemEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'DdpSourceSystem' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<DdpSourceSystem>();
        for (int i = 0; i < 10; i++) {
            DdpSourceSystem obj = getNewTransientDdpSourceSystem(i);
            try {
                ddpSourceSystemService.saveDdpSourceSystem(obj);
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            ddpSourceSystemRepository.flush();
            data.add(obj);
        }
    }
    
}
