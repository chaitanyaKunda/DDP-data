// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.data.domain;

import com.agility.ddp.data.domain.DdpCommOptionsSetup;
import com.agility.ddp.data.domain.DdpCommOptionsSetupDataOnDemand;
import com.agility.ddp.data.domain.DdpCommOptionsSetupRepository;
import com.agility.ddp.data.domain.DdpCommOptionsSetupService;
import com.agility.ddp.data.domain.DdpRuleDetail;
import com.agility.ddp.data.domain.DdpRuleDetailDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect DdpCommOptionsSetupDataOnDemand_Roo_DataOnDemand {
    
    declare @type: DdpCommOptionsSetupDataOnDemand: @Component;
    
    private Random DdpCommOptionsSetupDataOnDemand.rnd = new SecureRandom();
    
    private List<DdpCommOptionsSetup> DdpCommOptionsSetupDataOnDemand.data;
    
    @Autowired
    DdpRuleDetailDataOnDemand DdpCommOptionsSetupDataOnDemand.ddpRuleDetailDataOnDemand;
    
    @Autowired
    DdpCommOptionsSetupService DdpCommOptionsSetupDataOnDemand.ddpCommOptionsSetupService;
    
    @Autowired
    DdpCommOptionsSetupRepository DdpCommOptionsSetupDataOnDemand.ddpCommOptionsSetupRepository;
    
    public DdpCommOptionsSetup DdpCommOptionsSetupDataOnDemand.getNewTransientDdpCommOptionsSetup(int index) {
        DdpCommOptionsSetup obj = new DdpCommOptionsSetup();
        setCopCreatedBy(obj, index);
        setCopCreatedDate(obj, index);
        setCopModifiedBy(obj, index);
        setCopModifiedDate(obj, index);
        setCopOption(obj, index);
        setCopRdtId(obj, index);
        return obj;
    }
    
    public void DdpCommOptionsSetupDataOnDemand.setCopCreatedBy(DdpCommOptionsSetup obj, int index) {
        String copCreatedBy = "copCreatedBy_" + index;
        if (copCreatedBy.length() > 120) {
            copCreatedBy = copCreatedBy.substring(0, 120);
        }
        obj.setCopCreatedBy(copCreatedBy);
    }
    
    public void DdpCommOptionsSetupDataOnDemand.setCopCreatedDate(DdpCommOptionsSetup obj, int index) {
        Calendar copCreatedDate = Calendar.getInstance();
        obj.setCopCreatedDate(copCreatedDate);
    }
    
    public void DdpCommOptionsSetupDataOnDemand.setCopModifiedBy(DdpCommOptionsSetup obj, int index) {
        String copModifiedBy = "copModifiedBy_" + index;
        if (copModifiedBy.length() > 120) {
            copModifiedBy = copModifiedBy.substring(0, 120);
        }
        obj.setCopModifiedBy(copModifiedBy);
    }
    
    public void DdpCommOptionsSetupDataOnDemand.setCopModifiedDate(DdpCommOptionsSetup obj, int index) {
        Calendar copModifiedDate = Calendar.getInstance();
        obj.setCopModifiedDate(copModifiedDate);
    }
    
    public void DdpCommOptionsSetupDataOnDemand.setCopOption(DdpCommOptionsSetup obj, int index) {
        String copOption = "copOption_" + index;
        if (copOption.length() > 16) {
            copOption = copOption.substring(0, 16);
        }
        obj.setCopOption(copOption);
    }
    
    public void DdpCommOptionsSetupDataOnDemand.setCopRdtId(DdpCommOptionsSetup obj, int index) {
        DdpRuleDetail copRdtId = ddpRuleDetailDataOnDemand.getRandomDdpRuleDetail();
        obj.setCopRdtId(copRdtId);
    }
    
    public DdpCommOptionsSetup DdpCommOptionsSetupDataOnDemand.getSpecificDdpCommOptionsSetup(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        DdpCommOptionsSetup obj = data.get(index);
        Integer id = obj.getCopId();
        return ddpCommOptionsSetupService.findDdpCommOptionsSetup(id);
    }
    
    public DdpCommOptionsSetup DdpCommOptionsSetupDataOnDemand.getRandomDdpCommOptionsSetup() {
        init();
        DdpCommOptionsSetup obj = data.get(rnd.nextInt(data.size()));
        Integer id = obj.getCopId();
        return ddpCommOptionsSetupService.findDdpCommOptionsSetup(id);
    }
    
    public boolean DdpCommOptionsSetupDataOnDemand.modifyDdpCommOptionsSetup(DdpCommOptionsSetup obj) {
        return false;
    }
    
    public void DdpCommOptionsSetupDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = ddpCommOptionsSetupService.findDdpCommOptionsSetupEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'DdpCommOptionsSetup' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<DdpCommOptionsSetup>();
        for (int i = 0; i < 10; i++) {
            DdpCommOptionsSetup obj = getNewTransientDdpCommOptionsSetup(i);
            try {
                ddpCommOptionsSetupService.saveDdpCommOptionsSetup(obj);
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            ddpCommOptionsSetupRepository.flush();
            data.add(obj);
        }
    }
    
}
