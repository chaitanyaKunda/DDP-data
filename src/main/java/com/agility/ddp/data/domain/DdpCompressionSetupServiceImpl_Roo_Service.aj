// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.data.domain;

import com.agility.ddp.data.domain.DdpCompressionSetup;
import com.agility.ddp.data.domain.DdpCompressionSetupRepository;
import com.agility.ddp.data.domain.DdpCompressionSetupServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect DdpCompressionSetupServiceImpl_Roo_Service {
    
    declare @type: DdpCompressionSetupServiceImpl: @Service;
    
    declare @type: DdpCompressionSetupServiceImpl: @Transactional;
    
    @Autowired
    DdpCompressionSetupRepository DdpCompressionSetupServiceImpl.ddpCompressionSetupRepository;
    
    public long DdpCompressionSetupServiceImpl.countAllDdpCompressionSetups() {
        return ddpCompressionSetupRepository.count();
    }
    
    public void DdpCompressionSetupServiceImpl.deleteDdpCompressionSetup(DdpCompressionSetup ddpCompressionSetup) {
        ddpCompressionSetupRepository.delete(ddpCompressionSetup);
    }
    
    public DdpCompressionSetup DdpCompressionSetupServiceImpl.findDdpCompressionSetup(Integer id) {
        return ddpCompressionSetupRepository.findOne(id);
    }
    
    public List<DdpCompressionSetup> DdpCompressionSetupServiceImpl.findAllDdpCompressionSetups() {
        return ddpCompressionSetupRepository.findAll();
    }
    
    public List<DdpCompressionSetup> DdpCompressionSetupServiceImpl.findDdpCompressionSetupEntries(int firstResult, int maxResults) {
        return ddpCompressionSetupRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void DdpCompressionSetupServiceImpl.saveDdpCompressionSetup(DdpCompressionSetup ddpCompressionSetup) {
        ddpCompressionSetupRepository.save(ddpCompressionSetup);
    }
    
    public DdpCompressionSetup DdpCompressionSetupServiceImpl.updateDdpCompressionSetup(DdpCompressionSetup ddpCompressionSetup) {
        return ddpCompressionSetupRepository.save(ddpCompressionSetup);
    }
    
}
