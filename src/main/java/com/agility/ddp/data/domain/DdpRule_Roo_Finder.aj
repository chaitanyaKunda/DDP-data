// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.data.domain;

import com.agility.ddp.data.domain.DdpAedRule;
import com.agility.ddp.data.domain.DdpExportRule;
import com.agility.ddp.data.domain.DdpRule;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect DdpRule_Roo_Finder {
    
    public static TypedQuery<DdpRule> DdpRule.findDdpRulesByDdpAedRule(DdpAedRule ddpAedRule) {
        if (ddpAedRule == null) throw new IllegalArgumentException("The ddpAedRule argument is required");
        EntityManager em = DdpRule.entityManager();
        TypedQuery<DdpRule> q = em.createQuery("SELECT o FROM DdpRule AS o WHERE o.ddpAedRule = :ddpAedRule", DdpRule.class);
        q.setParameter("ddpAedRule", ddpAedRule);
        return q;
    }
    
    public static TypedQuery<DdpRule> DdpRule.findDdpRulesByDdpExportRule(DdpExportRule ddpExportRule) {
        if (ddpExportRule == null) throw new IllegalArgumentException("The ddpExportRule argument is required");
        EntityManager em = DdpRule.entityManager();
        TypedQuery<DdpRule> q = em.createQuery("SELECT o FROM DdpRule AS o WHERE o.ddpExportRule = :ddpExportRule", DdpRule.class);
        q.setParameter("ddpExportRule", ddpExportRule);
        return q;
    }
    
}
