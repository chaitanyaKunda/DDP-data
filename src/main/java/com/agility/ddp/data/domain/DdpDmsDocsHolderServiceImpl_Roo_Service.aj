// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.agility.ddp.data.domain;

import com.agility.ddp.data.domain.DdpDmsDocsHolder;
import com.agility.ddp.data.domain.DdpDmsDocsHolderRepository;
import com.agility.ddp.data.domain.DdpDmsDocsHolderServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect DdpDmsDocsHolderServiceImpl_Roo_Service {
    
    declare @type: DdpDmsDocsHolderServiceImpl: @Service;
    
    declare @type: DdpDmsDocsHolderServiceImpl: @Transactional;
    
    @Autowired
    DdpDmsDocsHolderRepository DdpDmsDocsHolderServiceImpl.ddpDmsDocsHolderRepository;
    
    public long DdpDmsDocsHolderServiceImpl.countAllDdpDmsDocsHolders() {
        return ddpDmsDocsHolderRepository.count();
    }
    
    public void DdpDmsDocsHolderServiceImpl.deleteDdpDmsDocsHolder(DdpDmsDocsHolder ddpDmsDocsHolder) {
        ddpDmsDocsHolderRepository.delete(ddpDmsDocsHolder);
    }
    
    public DdpDmsDocsHolder DdpDmsDocsHolderServiceImpl.findDdpDmsDocsHolder(Integer id) {
        return ddpDmsDocsHolderRepository.findOne(id);
    }
    
    public List<DdpDmsDocsHolder> DdpDmsDocsHolderServiceImpl.findAllDdpDmsDocsHolders() {
        return ddpDmsDocsHolderRepository.findAll();
    }
    
    public List<DdpDmsDocsHolder> DdpDmsDocsHolderServiceImpl.findDdpDmsDocsHolderEntries(int firstResult, int maxResults) {
        return ddpDmsDocsHolderRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void DdpDmsDocsHolderServiceImpl.saveDdpDmsDocsHolder(DdpDmsDocsHolder ddpDmsDocsHolder) {
        ddpDmsDocsHolderRepository.save(ddpDmsDocsHolder);
    }
    
    public DdpDmsDocsHolder DdpDmsDocsHolderServiceImpl.updateDdpDmsDocsHolder(DdpDmsDocsHolder ddpDmsDocsHolder) {
        return ddpDmsDocsHolderRepository.save(ddpDmsDocsHolder);
    }
    
}
